//// Дискриптор файла. Номер открытого файла (потока) для 
//// обращения с ним
//FILE * fp;
///*
//Режимы открытия
//Каждый режим задается в виде набора символов. В частности, мы можем использовать следующие режимы:
//
//"w": текстовый файл открывается для записи.
//Если файл ранее существовал, то он пересоздается и записывается заново
//"r": текстовый файл открывается для чтения
//"a": текстовый файл открывается для добавления в него новых данных.
//Если файл существовал ранее, то данные просто добавляются
//"w+": текстовый файл создается для записи/записи.
//Если файл ранее существовал, то при первой записи после открытия он пересоздается и записывается заново.
//А при последующих записях после открытия данные добавляются в него без перезаписи.
//"r+": текстовый файл открывается для чтения/записи. Запись допустима в любом месте файла, кроме конца файла, то есть недопустимо увеличение размеров файла.
//"a+": текстовый файл открывается или создается (при его отсутствии) для чтения/записи. В отличие от режима w+ файл при открытии не пересоздается заново, а в отличии от режима r+ можно записывать данные в конец файла
//
//"wb": бинарный файл открывается для записи
//"rb": бинарный файл открывается для чтения
//"ab": бинарный файл открывается для дозаписи
//"w+b": бинарный файл создается для записи/чтения
//"r+b": бинарный файл открывается для чтения/записи
//"a+b": бинарный файл открывается или создается (при его отсутствии) для чтения/дозаписи
//	*/
//
//fp = fopen("out.txt", "w");
//if (fp == NULL)
//{
//	perror("Error occured while opening data.txt");
//	exit(0);
//}
//
//cout << " Дискриптор: " << fp << " \n";
//
//// Запись в файл
//const char* msg = "Привет File";
//for (int i = 0; i < 11; i++) {
//	putc(msg[i], fp);
//}
//fclose(fp);
//
//
//fp = fopen("out.txt", "r");
//if (fp == NULL)
//{
//	perror("Error occured while opening data.txt");
//	exit(0);
//}
//
//// Область памяти, куда записать поток байтов из файла
//char buffer[1024];
//
//int p = 0;
//char c;
//while ((c = getc(fp)) != EOF) {
//	buffer[p] = c;
//	p++;
//}
//
//buffer[p] = '\0';
//cout << " read from file: " << buffer << "\n";